#!/bin/bash
# openbach-backend daemon
# description: openbach-backend daemon
# processname: openbach-backend

DAEMON_PATH="/opt/openbach/backend/"

DAEMON=./manage.py
DAEMON2=./openbach-conductor.py
DAEMONOPTS="runserver 0.0.0.0:8000"

NAME=openbach-backend
NAME2=openbach-backend2
DESC="My daemon description"
PIDFILE=/var/run/$NAME.pid
PIDFILE2=/var/run/$NAME2.pid

case "$1" in
start)
    printf "%-50s" "Starting $NAME..."
    cd $DAEMON_PATH
    PID=`python $DAEMON $DAEMONOPTS > /dev/null 2>&1 & echo $!`
    if [ -z $PID ]; then
        printf "%s\n" "Fail"
    else
        echo $PID > $PIDFILE
        PID2=`python $DAEMON2 > /dev/null 2>&1 & echo $!`
        if [ -z $PID2 ]; then
            kill -HUP $PID
            printf "%s\n" "Fail"
            exit 1
        else
            echo $PID2 > $PIDFILE2
        fi
        printf "%s\n" "Ok"
    fi
;;
status)
    printf "%-50s" "Checking $NAME (django part)..."
    error=0
    if [ -f $PIDFILE ]; then
        PID=`cat $PIDFILE`
        if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
            printf "%s\n" "Process dead but pidfile exists"
            error=1
        else
            echo "Running"
        fi
    else
        printf "%s\n" "Service not running"
        error=2
    fi
    printf "%-50s" "Checking $NAME (scheduler part)..."
    if [ -f $PIDFILE2 ]; then
        PID=`cat $PIDFILE2`
        if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
            printf "%s\n" "Process dead but pidfile exists"
            error=3
        else
            echo "Running"
        fi
    else
        error=4
        printf "%s\n" "Service not running"
    fi
    exit $error
;;
stop)
    printf "%-50s" "Stopping $NAME (django part)"
    if [ -f $PIDFILE ]; then
        PID=`cat $PIDFILE`
        pkill -HUP -P $PID
        printf "%s\n" "Ok"
        rm -f $PIDFILE
    else
        printf "%s\n" "pidfile not found"
    fi
    printf "%-50s" "Stopping $NAME (scheduler part)"
    if [ -f $PIDFILE2 ]; then
        PID=`cat $PIDFILE2`
        kill -HUP $PID
        printf "%s\n" "Ok"
        rm -f $PIDFILE2
    else
        printf "%s\n" "pidfile not found"
    fi
;;
restart)
    $0 stop
    $0 start
;;

*)
    echo "Usage: $0 {status|start|stop|restart}"
    exit 1
esac

# 
#   OpenBACH is a generic testbed able to control/configure multiple
#   network/physical entities (under test) and collect data from them. It is
#   composed of an Auditorium (HMIs), a Controller, a Collector and multiple
#   Agents (one for each network entity that wants to be tested).
#   
#   
#   Copyright Â© 2016 CNES
#   
#   
#   This file is part of the OpenBACH testbed.
#   
#   
#   OpenBACH is a free software : you can redistribute it and/or modify it under the
#   terms of the GNU General Public License as published by the Free Software
#   Foundation, either version 3 of the License, or (at your option) any later
#   version.
#   
#   This program is distributed in the hope that it will be useful, but WITHOUT
#   ANY WARRANTY, without even the implied warranty of MERCHANTABILITY or FITNESS
#   FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
#   details.
#   
#   You should have received a copy of the GNU General Public License along with
#   this program. If not, see http://www.gnu.org/licenses/.
#   
#   
#   
#   @file     del_services_to_boot.yml
#   @brief    Tasks that remove services to boot
#   @author   Adrien THIBAUD <adrien.thibaud@toulouse.viveris.com>


---

- name: Check if services are installed (conductor)
  stat: path=/etc/systemd/system/openbach-conductor.service
  register: conductor_service1604
  when: ansible_distribution_version == "16.04"

- name: Check if services are installed (backend)
  stat: path=/etc/systemd/system/openbach-backend.service
  register: backend_service1604
  when: ansible_distribution_version == "16.04"

- name: Check if services are installed (status-manager)
  stat: path=/etc/systemd/system/status-manager.service
  register: statusmanager_service1604
  when: ansible_distribution_version == "16.04"

- name: Delete services to boot (conductor)
  shell: systemctl disable openbach-conductor
  when: ansible_distribution_version == "16.04" and conductor_service1604.stat.exists

- name: Delete services to boot (backend)
  shell: systemctl disable openbach-backend
  when: ansible_distribution_version == "16.04" and backend_service1604.stat.exists

- name: Delete services to boot (status-manager)
  shell: systemctl disable status-manager
  when: ansible_distribution_version == "16.04" and statusmanager_service1604.stat.exists

- name: Check if services are installed (conductor)
  stat: path=/etc/init.d/openbach-conductor
  register: conductor_servicenot1604
  when: ansible_distribution_version != "16.04"

- name: Check if services are installed (backend)
  stat: path=/etc/systemd/system/openbach-backend
  register: backend_servicenot1604
  when: ansible_distribution_version != "16.04"

- name: Check if services are installed (status-manager)
  stat: path=/etc/init.d/status-manager
  register: statusmanager_servicenot1604
  when: ansible_distribution_version != "16.04"

- name: Delete services to boot (conductor)
  shell: update-rc.d -f openbach-conductor remove
  when: ansible_distribution_version != "16.04" and conductor_servicenot1604.stat.exists

- name: Delete services to boot (backend)
  shell: update-rc.d -f openbach-backend remove
  when: ansible_distribution_version != "16.04" and backend_servicenot1604.stat.exists

- name: Delete services to boot (status-manager)
  shell: update-rc.d -f status-manager remove
  when: ansible_distribution_version != "16.04" and statusmanager_servicenot1604.stat.exists


---

- name: Install apt Dependencies
  apt: name={{ item }} state=present
  with_items:
    - python-influxdb
    - openjdk-8-jdk
  environment: "{{ openbach_proxy_env }}"
  become: yes

- name: Install pip Dependencies
  pip: name={{ item }} executable=pip3 state=present
  with_items:
    - elasticsearch
    - elasticsearch_curator
  environment: "{{ openbach_proxy_env }}"
  become: yes

- name: Upload Binary Files
  copy: src={{ item }} dest=/tmp/
  with_items:
    - logstash-offline-plugins.zip

- name: Add OpenBACH repository
  apt_repository:
    repo: "{{ openbach_repository }}"
    state: present
  become: yes

- name: Install .deb Packages
  apt: name={{ item }} force=yes
  with_items:
    - elasticsearch=5.6.3
    - influxdb=0.13.0-1
    - logstash=1:5.4.0-1
  become: yes
  notify:
    - restart elasticsearch
    - restart influxdb
    - restart logstash

- name: Configure Elasticsearch
  template: src=elasticsearch.yml.j2 dest=/etc/elasticsearch/elasticsearch.yml owner=root group=elasticsearch
  become: yes
  notify: restart elasticsearch

- name: Copy Elasticsearch cronjob script
  template: src=curator_cronjob.py.j2 dest=/etc/cron.daily/curator_cronjob.py owner=root group=root mode=0755
  become: yes

- name: Add Elasticsearch cron job
  cron: name=curator minute=0 hour=0 job=/etc/cron.daily/curator_cronjob.py
  become: yes

- name: Configure Logstash
  template: src=collector.conf.j2 dest=/etc/logstash/conf.d/collector.conf owner=root group=root
  vars:
    auditorium_ip: "{{ openbach_auditorium | default(('auditorium' in group_names and inventory_hostname) or ('auditorium' in groups and groups.auditorium and groups.auditorium[0]) or inventory_hostname) }}"
  become: yes
  notify: restart logstash

- name: Add patterns to the ouptput module 'grok'
  copy: src=pattern dest=/etc/logstash/conf.d/
  become: yes
  notify: restart logstash

- name: Install logstash-output-influxdb
  shell: bin/logstash-plugin install file:///tmp/logstash-offline-plugins.zip
  args:
    chdir: /usr/share/logstash
    executable: /bin/bash
    creates: /usr/share/logstash/vendor/bundle/jruby/1.9/gems/logstash-output-influxdb-5.0.0
  become: yes
  become_user: logstash
  notify: restart logstash

- name: Set the Port to use by InfluxDB
  replace: dest=/etc/influxdb/influxdb.conf regexp='(\s+)bind-address = ":8086"(\s+.*)?$' replace='\1bind-address = ":{{ influxdb_port }}"\2' backup=yes
  become: yes
  notify: restart influxdb

- name: Create OpenBACH repository
  file: path=/opt/openbach/collector state=directory
  remote_user: openbach

- name: Copy the version file on the Collector
  copy: src=../version dest=/opt/openbach/collector/version
  remote_user: openbach

#!/bin/bash
# 
#   OpenBACH is a generic testbed able to control/configure multiple
#   network/physical entities (under test) and collect data from them. It is
#   composed of an Auditorium (HMIs), a Controller, a Collector and multiple
#   Agents (one for each network entity that wants to be tested).
#   
#   
#   Copyright Â© 2016 CNES
#   
#   
#   This file is part of the OpenBACH testbed.
#   
#   
#   OpenBACH is a free software : you can redistribute it and/or modify it under the
#   terms of the GNU General Public License as published by the Free Software
#   Foundation, either version 3 of the License, or (at your option) any later
#   version.
#   
#   This program is distributed in the hope that it will be useful, but WITHOUT
#   ANY WARRANTY, without even the implied warranty of MERCHANTABILITY or FITNESS
#   FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
#   details.
#   
#   You should have received a copy of the GNU General Public License along with
#   this program. If not, see http://www.gnu.org/licenses/.
#   
#   
#   
#   @file     openbach-baton
#   @brief    This script is used by the OpenBACH conductor (Controller) to give its orders to the Agent
#   @author   Adrien THIBAUD <adrien.thibaud@toulouse.viveris.com>


if [ -z "$1" ]
then
    echo "Usage 1: $0 {add_job_agent|del_job_agent} *job_name*"
    echo "Usage 2: $0 {start_job_instance_agent|restart_job_instance_agent} *job_name* *instance_id* {date *date*|interval *interval} [options]"
    echo "Usage 3: $0 status_job_instance_agent *job_name* *instance_id* {date *date*|interval *interval|stop}"
    echo "Usage 4: $0 stop_job_instance_agent *job_name* *instance_id* date *date*"
    echo "Usage 5: $0 status_jobs_agent"
    exit 1
fi

if [ $1 != "status_jobs_agent" ]
then
    if [ -z "$2" ]
    then
        echo "Usage 1: $0 {add_job_agent|del_job_agent} *job_name*"
        echo "Usage 2: $0 {start_job_instance_agent|restart_job_instance_agent} *job_name* *instance_id* {date *date*|interval *interval} [options]"
        echo "Usage 3: $0 status_job_instance_agent *job_name* *instance_id* {date *date*|interval *interval|stop}"
        echo "Usage 4: $0 stop_job_instance_agent *job_name* *instance_id* date *date*"
        echo "Usage 5: $0 status_jobs_agent"
        exit 1
    fi
fi

result=`echo "$@" | nc localhost 1112`

IFS=' ' read -ra arr <<< "$result"
if [ $arr = "OK" ]; then
    echo $result
    exit 0
elif [ $arr = "KO" ]; then
    echo $result
    exit 2
else
    echo $result
    exit 3
fi


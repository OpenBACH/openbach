---

- name: Install apt dependencies
  apt: pkg={{ item }} state=installed update_cache=no
  with_items:
    - sshpass
    - postgresql-server-dev-9.5
    - postgresql
    - libpq-dev  # For psycopg2, necessary for ansible's postgresql_* modules
    - python-dev  # For psycopg2, necessary for ansible's postgresql_* modules
  become: yes
  environment: "{{ openbach_proxy_env }}"
  notify: restart postgresql

- name: Install pip Dependencies (for ansible modules to run)
  pip: name={{ item }} executable=pip2 extra_args='-U --no-index --find-links=file:///opt/openbach/pip_mirror/python2/'
  with_items:
    - psycopg2
  become: yes

- name: Install pip3 Dependencies
  pip: name={{ item }} executable=pip3 extra_args='-U --no-index --find-links=file:///opt/openbach/pip_mirror/python3/'
  with_items:
    - django
    - psycopg2
    - apscheduler
    - uwsgi
    - fuzzywuzzy
    - ansible
  become: yes

- name: Configure Rsyslog
  template: src={{ item }}.j2 dest=/etc/rsyslog.d/{{ item }}.conf mode=0644
  with_items:
    - openbach_conductor
    - openbach_conductor_local
    - openbach_backend
    - openbach_backend_local
  vars:
    collector_ip: "{{ openbach_collector }}"
  become: yes
  notify: restart rsyslog

- name: Change postgresql Method to Trust for User postgres
  replace: dest=/etc/postgresql/9.5/main/pg_hba.conf regexp='^local\s+all\s+postgres\s+peer' replace='local   all             postgres                                trust' backup=yes
  become: yes
  notify: restart postgresql

- meta: flush_handlers

- name: Create the Backend's Database
  postgresql_db: name=openbach_db state=present
  become: yes

- name: Create OpenBACH repository
  file: path=/opt/openbach/controller/{{ item }} state=directory
  with_items:
    - backend/static
    - conductor
    - src/jobs/private_jobs
    - src/agent
    - ansible/roles
  remote_user: openbach

- name: Install the Backend
  synchronize: src=../src/controller/backend/openbach_django/ dest=/opt/openbach/controller/backend/openbach_django/ recursive=yes delete=yes rsync_opts=--exclude=__pycache__
  remote_user: openbach
  notify:
    - start backend
    - start conductor

- name: Configure the Backend
  synchronize: src=../src/controller/backend/backend/ dest=/opt/openbach/controller/backend/backend/ recursive=yes delete=no rsync_opts=--exclude=__pycache__
  remote_user: openbach
  notify:
    - start backend
    - start conductor

- name: Retrieve local settings if they Exist
  local_settings: path=/opt/openbach/controller/backend/backend/
  remote_user: openbach

- name: Set up local settings
  template: src=backend_settings.py.j2 dest=/opt/openbach/controller/backend/backend/local_settings.py mode=0400
  remote_user: openbach
  notify:
    - start backend
    - start conductor

- name: Create the Backend's Database Admin User
  postgresql_user: db=openbach_db name=openbach password={{ openbach_local_settings_database_password }} priv=CONNECT
  become: yes

- name: Fetch the openbach User's SSH public Key
  fetch: src=/home/openbach/.ssh/id_rsa.pub dest=/tmp/controller_key
  become: yes

- name: Copy Django's manager file
  copy: src=../src/controller/backend/openbach-backend.py dest=/opt/openbach/controller/backend/openbach-backend.py mode=0500
  remote_user: openbach

- name: Initialize the Backend's Database
  shell: /opt/openbach/controller/backend/openbach-backend.py migrate --no-input
  remote_user: openbach

- name: Manage Superusers in the Database
  openbach_superuser: manager=/opt/openbach/controller/backend/openbach-backend.py
  remote_user: openbach

- name: Collect Django's static files
  shell: /opt/openbach/controller/backend/openbach-backend.py collectstatic --no-input
  remote_user: openbach

- name: Create the Backend service
  copy: src=openbach_backend.service dest=/etc/systemd/system/ mode=0644
  become: yes
  notify: start backend

- name: Install the Conductor
  synchronize: src=../src/controller/openbach-conductor/ dest=/opt/openbach/controller/conductor/ recursive=yes delete=yes rsync_opts=--exclude=__pycache__
  remote_user: openbach
  notify: start conductor

- name: Create the Conductor service
  copy: src=openbach_conductor.service dest=/etc/systemd/system/ mode=0644
  become: yes
  notify: start conductor

- name: Copy the sources of the Agent
  synchronize: src=../src/agent/ dest=/opt/openbach/controller/src/agent/ recursive=yes delete=yes rsync_opts=--exclude=__pycache__
  remote_user: openbach

- name: Copy the installation Playbooks
  synchronize: src=../ansible/roles/ dest=/opt/openbach/controller/ansible/roles/ recursive=yes delete=yes rsync_opts=--exclude=__pycache__
  remote_user: openbach

- name: Place a Link to /opt/openbach/pip_mirror so that Playbooks can Find it
  file: path=/opt/openbach/controller/pip_mirror src=/opt/openbach/pip_mirror state=link
  remote_user: openbach

- name: Copy the sources of the Jobs
  synchronize: src={{ item }} dest=/opt/openbach/controller/src/jobs/ recursive=yes delete=no rsync_opts=--exclude=__pycache__
  with_items:
    - ../src/jobs/
    - "{{ openbach_jobs_folders | default([]) }}"
  remote_user: openbach

- name: Copy the version file on the Controller
  copy: src=../version dest=/opt/openbach/controller/version
  remote_user: openbach

# 
#   OpenBACH is a generic testbed able to control/configure multiple
#   network/physical entities (under test) and collect data from them. It is
#   composed of an Auditorium (HMIs), a Controller, a Collector and multiple
#   Agents (one for each network entity that wants to be tested).
#   
#   
#   Copyright Â© 2016 CNES
#   
#   
#   This file is part of the OpenBACH testbed.
#   
#   
#   OpenBACH is a free software : you can redistribute it and/or modify it under the
#   terms of the GNU General Public License as published by the Free Software
#   Foundation, either version 3 of the License, or (at your option) any later
#   version.
#   
#   This program is distributed in the hope that it will be useful, but WITHOUT
#   ANY WARRANTY, without even the implied warranty of MERCHANTABILITY or FITNESS
#   FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
#   details.
#   
#   You should have received a copy of the GNU General Public License along with
#   this program. If not, see http://www.gnu.org/licenses/.
#   
#   
#   
#   @file     install_configure_opensand_sat.yml
#   @brief    Playbook that install the Job configure_opensand_sat
#   @author   Adrien THIBAUD <adrien.thibaud@toulouse.viveris.com>


---

- hosts: Agents
  vars_files:
    - vars/main.yml
  vars:
    - job_conf: configure_opensand_sat.cfg

  tasks:
  - name: Create Job repository
    file: path=/opt/openbach-jobs/{{ job_name }} state=directory mode=0755
    become: yes

  - name: Add OpenSAND repository
    apt_repository: repo="deb http://packages.net4sat.org/opensand trusty stable" update_cache=yes
    become: yes

  - name: Install OpenSAND daemon
    environment: 
     DEBIAN_FRONTEND : noninteractive
    apt: name=opensand state=installed force=yes update_cache=no install_recommends=yes
    become: yes

  - name: Configure opensand
    debconf: name=debconf question={{ item.question }} value={{ item.value }} vtype={{ item.vtype }}
    with_items: "{{ configuration }}"
    register: config
    become: yes

  - name: Install Job configuration file
    copy: src=files/{{ job_conf }} dest=/opt/openbach-agent/jobs/ mode=0644
    become: yes

  - include: '{{ path_src }}/add_job.yml'

  - name: Restart the machine
    shell: shutdown -r now 
    when: config.changed
    become: yes

  - name: waiting for the machine to come back
    local_action: wait_for host={{ inventory_hostname }} port=22 state=started delay=30 timeout=300
    when: config.changed


# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2017-06-26 15:04
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import ipaddress
import openbach_django.base_models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('name', models.CharField(max_length=500, unique=True)),
                ('address', models.GenericIPAddressField(primary_key=True, serialize=False)),
                ('status', models.CharField(blank=True, max_length=500, null=True)),
                ('update_status', models.DateTimeField(blank=True, null=True)),
                ('reachable', models.BooleanField()),
                ('update_reachable', models.DateTimeField(blank=True, null=True)),
                ('username', models.CharField(max_length=500)),
                ('password', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='AgentCommandResult',
            fields=[
                ('address', models.GenericIPAddressField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='ArgumentValue',
            fields=[
                ('argument_value_id', models.AutoField(primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Collector',
            fields=[
                ('address', models.GenericIPAddressField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=500)),
                ('password', models.CharField(max_length=500)),
                ('logs_port', models.IntegerField(default=10514)),
                ('logs_query_port', models.IntegerField(default=9200)),
                ('stats_port', models.IntegerField(default=2222)),
                ('stats_query_port', models.IntegerField(default=8086)),
                ('stats_database_name', models.CharField(default='openbach', max_length=500)),
                ('stats_database_precision', models.CharField(default='ms', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='CollectorCommandResult',
            fields=[
                ('address', models.GenericIPAddressField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='CommandResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response', models.TextField(default='{"state": "Running"}')),
                ('returncode', models.IntegerField(default=202)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_model', models.CharField(editable=False, max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True, null=True)),
                ('agent', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='entity', to='openbach_django.Agent')),
            ],
        ),
        migrations.CreateModel(
            name='InstalledJob',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_status', models.DateTimeField(blank=True, null=True)),
                ('severity', models.IntegerField()),
                ('local_severity', models.IntegerField()),
                ('default_stat_storage', models.BooleanField(default=True)),
                ('default_stat_broadcast', models.BooleanField(default=False)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='installed_jobs', to='openbach_django.Agent')),
            ],
        ),
        migrations.CreateModel(
            name='InstalledJobCommandResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agent_ip', models.GenericIPAddressField()),
                ('job_name', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('name', models.CharField(max_length=500, primary_key=True, serialize=False)),
                ('path', models.FilePathField(allow_files=False, allow_folders=True, path='/opt/openbach-controller/jobs', recursive=True)),
                ('help', models.TextField(blank=True, null=True)),
                ('job_version', models.CharField(blank=True, max_length=500, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('has_uncertain_required_arg', models.BooleanField(default=False)),
                ('persistent', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='JobInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=500)),
                ('update_status', models.DateTimeField()),
                ('start_date', models.DateTimeField()),
                ('stop_date', models.DateTimeField(blank=True, null=True)),
                ('periodic', models.BooleanField()),
                ('is_stopped', models.BooleanField(default=False)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instances', to='openbach_django.InstalledJob')),
            ],
        ),
        migrations.CreateModel(
            name='JobInstanceCommandResult',
            fields=[
                ('job_instance_id', models.IntegerField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('name', models.CharField(max_length=500, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Network',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='OpenbachFunction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_model', models.CharField(editable=False, max_length=50, null=True)),
                ('function_id', models.IntegerField()),
                ('label', models.CharField(blank=True, max_length=500, null=True)),
                ('wait_time', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='OpenbachFunctionInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, max_length=500, null=True)),
                ('launch_date', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Operand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_model', models.CharField(editable=False, max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OptionalJobArgument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('int', 'INTEGER'), ('bool', 'BOOLEAN'), ('str', 'STRING'), ('float', 'FLOATING_POINT_NUMBER'), ('ip', 'IP_ADDRESS'), ('list', 'LIST'), ('json', 'JSON_DATA'), ('None', 'NONE_TYPE')], default='None', max_length=5)),
                ('count', models.CharField(blank=True, max_length=11, null=True)),
                ('name', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True, null=True)),
                ('flag', models.CharField(max_length=500)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='optional_arguments', to='openbach_django.Job')),
            ],
        ),
        migrations.CreateModel(
            name='OsCommand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('requirements', models.CharField(max_length=500)),
                ('command', models.CharField(max_length=1000)),
                ('command_stop', models.CharField(blank=True, max_length=1000, null=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='os', to='openbach_django.Job')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('name', models.CharField(max_length=500, primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RequiredJobArgument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('int', 'INTEGER'), ('bool', 'BOOLEAN'), ('str', 'STRING'), ('float', 'FLOATING_POINT_NUMBER'), ('ip', 'IP_ADDRESS'), ('list', 'LIST'), ('json', 'JSON_DATA'), ('None', 'NONE_TYPE')], default='None', max_length=5)),
                ('count', models.CharField(blank=True, max_length=11, null=True)),
                ('name', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True, null=True)),
                ('rank', models.IntegerField()),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='required_arguments', to='openbach_django.Job')),
            ],
        ),
        migrations.CreateModel(
            name='Scenario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True, null=True)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scenarios', to='openbach_django.Project')),
            ],
        ),
        migrations.CreateModel(
            name='ScenarioArgument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('int', 'INTEGER'), ('bool', 'BOOLEAN'), ('str', 'STRING'), ('float', 'FLOATING_POINT_NUMBER'), ('ip', 'IP_ADDRESS'), ('list', 'LIST'), ('json', 'JSON_DATA'), ('None', 'NONE_TYPE')], default='None', max_length=5)),
                ('count', models.CharField(blank=True, max_length=11, null=True)),
                ('name', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True, null=True)),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='arguments', to='openbach_django.Scenario')),
            ],
        ),
        migrations.CreateModel(
            name='ScenarioConstant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('int', 'INTEGER'), ('bool', 'BOOLEAN'), ('str', 'STRING'), ('float', 'FLOATING_POINT_NUMBER'), ('ip', 'IP_ADDRESS'), ('list', 'LIST'), ('json', 'JSON_DATA'), ('None', 'NONE_TYPE')], default='None', max_length=5)),
                ('count', models.CharField(blank=True, max_length=11, null=True)),
                ('name', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True, null=True)),
                ('value', models.CharField(max_length=500)),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='constants', to='openbach_django.Scenario')),
            ],
        ),
        migrations.CreateModel(
            name='ScenarioInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, max_length=500, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('stop_date', models.DateTimeField(blank=True, null=True)),
                ('is_stopped', models.BooleanField(default=False)),
                ('openbach_function_instance', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='started_scenario', to='openbach_django.OpenbachFunctionInstance')),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instances', to='openbach_django.Scenario')),
            ],
        ),
        migrations.CreateModel(
            name='StartJobInstanceArgument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('value', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
            ],
        ),
        migrations.CreateModel(
            name='Statistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True, null=True)),
                ('frequency', models.TextField(blank=True, null=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statistics', to='openbach_django.Job')),
            ],
        ),
        migrations.CreateModel(
            name='StatisticInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('storage', models.BooleanField(default=True)),
                ('broadcast', models.BooleanField(default=False)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statistics', to='openbach_django.InstalledJob')),
                ('stat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instances', to='openbach_django.Statistic')),
            ],
        ),
        migrations.CreateModel(
            name='WaitForFinished',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='WaitForLaunched',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Watch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interval', models.IntegerField(blank=True, null=True)),
                ('job_instance', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='watch', to='openbach_django.JobInstance')),
            ],
        ),
        migrations.CreateModel(
            name='AddJob',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('name', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('path', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='ConditionAnd',
            fields=[
                ('condition_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.Condition')),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.condition',),
        ),
        migrations.CreateModel(
            name='ConditionEqual',
            fields=[
                ('condition_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.Condition')),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.condition',),
        ),
        migrations.CreateModel(
            name='ConditionGreater',
            fields=[
                ('condition_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.Condition')),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.condition',),
        ),
        migrations.CreateModel(
            name='ConditionGreaterOrEqual',
            fields=[
                ('condition_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.Condition')),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.condition',),
        ),
        migrations.CreateModel(
            name='ConditionLower',
            fields=[
                ('condition_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.Condition')),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.condition',),
        ),
        migrations.CreateModel(
            name='ConditionLowerOrEqual',
            fields=[
                ('condition_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.Condition')),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.condition',),
        ),
        migrations.CreateModel(
            name='ConditionNot',
            fields=[
                ('condition_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.Condition')),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.condition',),
        ),
        migrations.CreateModel(
            name='ConditionOr',
            fields=[
                ('condition_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.Condition')),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.condition',),
        ),
        migrations.CreateModel(
            name='ConditionUnequal',
            fields=[
                ('condition_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.Condition')),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.condition',),
        ),
        migrations.CreateModel(
            name='ConditionXor',
            fields=[
                ('condition_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.Condition')),
                ('left_condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Condition')),
                ('right_condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Condition')),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.condition',),
        ),
        migrations.CreateModel(
            name='DeleteJob',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('name', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='FileCommandResult',
            fields=[
                ('commandresult_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.CommandResult')),
                ('filename', models.CharField(max_length=500)),
                ('remote_path', models.CharField(max_length=500)),
                ('address', models.GenericIPAddressField()),
            ],
            bases=('openbach_django.commandresult',),
        ),
        migrations.CreateModel(
            name='GetHelpJob',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('name', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='GetStatisticsJob',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('name', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('verbosity', openbach_django.base_models.OpenbachFunctionArgument(type=int)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='If',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('functions_true', openbach_django.base_models.OpenbachFunctionArgument(type=list)),
                ('functions_false', openbach_django.base_models.OpenbachFunctionArgument(type=list)),
                ('condition', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='if_function', to='openbach_django.Condition')),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='InstallAgent',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('address', openbach_django.base_models.OpenbachFunctionArgument(type=ipaddress._BaseAddress)),
                ('collector', openbach_django.base_models.OpenbachFunctionArgument(type=ipaddress._BaseAddress)),
                ('username', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('password', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('name', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='InstallJobs',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('addresses', openbach_django.base_models.OpenbachFunctionArgument(type=list)),
                ('names', openbach_django.base_models.OpenbachFunctionArgument(type=list)),
                ('severity', openbach_django.base_models.OpenbachFunctionArgument(type=int)),
                ('local_severity', openbach_django.base_models.OpenbachFunctionArgument(type=int)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='ListAgent',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('update', openbach_django.base_models.OpenbachFunctionArgument(type=bool)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='ListInstalledJobs',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('address', openbach_django.base_models.OpenbachFunctionArgument(type=ipaddress._BaseAddress)),
                ('update', openbach_django.base_models.OpenbachFunctionArgument(type=bool)),
                ('verbosity', openbach_django.base_models.OpenbachFunctionArgument(type=int)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='ListJobInstances',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('addresses', openbach_django.base_models.OpenbachFunctionArgument(type=list)),
                ('update', openbach_django.base_models.OpenbachFunctionArgument(type=bool)),
                ('verbosity', openbach_django.base_models.OpenbachFunctionArgument(type=int)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='ListJobs',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('verbosity', openbach_django.base_models.OpenbachFunctionArgument(type=int)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='OperandDatabase',
            fields=[
                ('operand_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.Operand')),
                ('name', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('key', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('attribute', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.operand',),
        ),
        migrations.CreateModel(
            name='OperandStatistic',
            fields=[
                ('operand_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.Operand')),
                ('field', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('job_name', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('agent_address', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.operand',),
        ),
        migrations.CreateModel(
            name='OperandValue',
            fields=[
                ('operand_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.Operand')),
                ('value', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.operand',),
        ),
        migrations.CreateModel(
            name='OptionalJobArgumentValue',
            fields=[
                ('argumentvalue_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.ArgumentValue')),
                ('argument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='openbach_django.OptionalJobArgument')),
            ],
            bases=('openbach_django.argumentvalue',),
        ),
        migrations.CreateModel(
            name='PushFile',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('local_path', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('remote_path', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('agent_ip', openbach_django.base_models.OpenbachFunctionArgument(type=ipaddress._BaseAddress)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='RequiredJobArgumentValue',
            fields=[
                ('argumentvalue_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.ArgumentValue')),
                ('argument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='openbach_django.RequiredJobArgument')),
            ],
            bases=('openbach_django.argumentvalue',),
        ),
        migrations.CreateModel(
            name='RestartJobInstance',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('instance_id', openbach_django.base_models.OpenbachFunctionArgument(type=int)),
                ('instance_args', openbach_django.base_models.OpenbachFunctionArgument(type=dict)),
                ('date', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('interval', openbach_django.base_models.OpenbachFunctionArgument(type=int)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='RetrieveStatusAgents',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('addresses', openbach_django.base_models.OpenbachFunctionArgument(type=list)),
                ('update', openbach_django.base_models.OpenbachFunctionArgument(type=bool)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='RetrieveStatusJobs',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('addresses', openbach_django.base_models.OpenbachFunctionArgument(type=list)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='ScenarioArgumentValue',
            fields=[
                ('argumentvalue_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.ArgumentValue')),
                ('argument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='openbach_django.ScenarioArgument')),
                ('scenario_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='arguments_values', to='openbach_django.ScenarioInstance')),
            ],
            bases=('openbach_django.argumentvalue',),
        ),
        migrations.CreateModel(
            name='SetLogSeverityJob',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('address', openbach_django.base_models.OpenbachFunctionArgument(type=ipaddress._BaseAddress)),
                ('job_name', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('severity', openbach_django.base_models.OpenbachFunctionArgument(type=int)),
                ('date', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('local_severity', openbach_django.base_models.OpenbachFunctionArgument(type=int)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='SetStatisticsPolicyJob',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('address', openbach_django.base_models.OpenbachFunctionArgument(type=ipaddress._BaseAddress)),
                ('job_name', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('stat_name', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('storage', openbach_django.base_models.OpenbachFunctionArgument(type=bool)),
                ('broadcast', openbach_django.base_models.OpenbachFunctionArgument(type=bool)),
                ('date', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='StartJobInstance',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('agent_ip', openbach_django.base_models.OpenbachFunctionArgument(type=ipaddress._BaseAddress)),
                ('job_name', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('offset', openbach_django.base_models.OpenbachFunctionArgument(type=int)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='StartScenarioInstance',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('scenario_name', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('arguments', openbach_django.base_models.OpenbachFunctionArgument(type=dict)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='StatusJobInstance',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('instance_id', openbach_django.base_models.OpenbachFunctionArgument(type=int)),
                ('verbosity', openbach_django.base_models.OpenbachFunctionArgument(type=int)),
                ('update', openbach_django.base_models.OpenbachFunctionArgument(type=bool)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='StopJobInstance',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('openbach_function_ids', openbach_django.base_models.OpenbachFunctionArgument(type=list)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='StopScenarioInstance',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('openbach_function_id', openbach_django.base_models.OpenbachFunctionArgument(type=int)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='UninstallAgent',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('address', openbach_django.base_models.OpenbachFunctionArgument(type=ipaddress._BaseAddress)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='WatchJobInstance',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('instance_id', openbach_django.base_models.OpenbachFunctionArgument(type=int)),
                ('date', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
                ('interval', openbach_django.base_models.OpenbachFunctionArgument(type=int)),
                ('stop', openbach_django.base_models.OpenbachFunctionArgument(type=str)),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.CreateModel(
            name='While',
            fields=[
                ('openbachfunction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='openbach_django.OpenbachFunction')),
                ('functions_while', openbach_django.base_models.OpenbachFunctionArgument(type=list)),
                ('functions_end', openbach_django.base_models.OpenbachFunctionArgument(type=list)),
                ('condition', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='while_function', to='openbach_django.Condition')),
            ],
            options={
                'abstract': False,
            },
            bases=('openbach_django.openbachfunction',),
        ),
        migrations.AddField(
            model_name='waitforlaunched',
            name='openbach_function_instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='launched_waiters', to='openbach_django.OpenbachFunction'),
        ),
        migrations.AddField(
            model_name='waitforlaunched',
            name='openbach_function_waited',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.OpenbachFunction'),
        ),
        migrations.AddField(
            model_name='waitforfinished',
            name='openbach_function_instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='finished_waiters', to='openbach_django.OpenbachFunction'),
        ),
        migrations.AddField(
            model_name='waitforfinished',
            name='openbach_function_waited',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.OpenbachFunction'),
        ),
        migrations.AddField(
            model_name='openbachfunctioninstance',
            name='openbach_function',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instances', to='openbach_django.OpenbachFunction'),
        ),
        migrations.AddField(
            model_name='openbachfunctioninstance',
            name='scenario_instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='openbach_functions_instances', to='openbach_django.ScenarioInstance'),
        ),
        migrations.AddField(
            model_name='openbachfunction',
            name='scenario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='openbach_functions', to='openbach_django.Scenario'),
        ),
        migrations.AddField(
            model_name='network',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='networks', to='openbach_django.Project'),
        ),
        migrations.AddField(
            model_name='jobinstancecommandresult',
            name='status_restart',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='openbach_django.CommandResult'),
        ),
        migrations.AddField(
            model_name='jobinstancecommandresult',
            name='status_start',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='openbach_django.CommandResult'),
        ),
        migrations.AddField(
            model_name='jobinstancecommandresult',
            name='status_stop',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='openbach_django.CommandResult'),
        ),
        migrations.AddField(
            model_name='jobinstancecommandresult',
            name='status_watch',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='openbach_django.CommandResult'),
        ),
        migrations.AddField(
            model_name='jobinstance',
            name='openbach_function_instance',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='started_job', to='openbach_django.OpenbachFunctionInstance'),
        ),
        migrations.AddField(
            model_name='job',
            name='keywords',
            field=models.ManyToManyField(related_name='jobs', to='openbach_django.Keyword'),
        ),
        migrations.AddField(
            model_name='installedjobcommandresult',
            name='status_install',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='openbach_django.CommandResult'),
        ),
        migrations.AddField(
            model_name='installedjobcommandresult',
            name='status_log_severity',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='openbach_django.CommandResult'),
        ),
        migrations.AddField(
            model_name='installedjobcommandresult',
            name='status_stat_policy',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='openbach_django.CommandResult'),
        ),
        migrations.AddField(
            model_name='installedjobcommandresult',
            name='status_uninstall',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='openbach_django.CommandResult'),
        ),
        migrations.AddField(
            model_name='installedjob',
            name='job',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='installations', to='openbach_django.Job'),
        ),
        migrations.AddField(
            model_name='entity',
            name='networks',
            field=models.ManyToManyField(related_name='entities', to='openbach_django.Network'),
        ),
        migrations.AddField(
            model_name='entity',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entities', to='openbach_django.Project'),
        ),
        migrations.AddField(
            model_name='collectorcommandresult',
            name='status_add',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='openbach_django.CommandResult'),
        ),
        migrations.AddField(
            model_name='collectorcommandresult',
            name='status_del',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='openbach_django.CommandResult'),
        ),
        migrations.AddField(
            model_name='collectorcommandresult',
            name='status_modify',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='openbach_django.CommandResult'),
        ),
        migrations.AddField(
            model_name='agentcommandresult',
            name='status_assign',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='openbach_django.CommandResult'),
        ),
        migrations.AddField(
            model_name='agentcommandresult',
            name='status_install',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='openbach_django.CommandResult'),
        ),
        migrations.AddField(
            model_name='agentcommandresult',
            name='status_retrieve_status_agent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='openbach_django.CommandResult'),
        ),
        migrations.AddField(
            model_name='agentcommandresult',
            name='status_retrieve_status_jobs',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='openbach_django.CommandResult'),
        ),
        migrations.AddField(
            model_name='agentcommandresult',
            name='status_uninstall',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='openbach_django.CommandResult'),
        ),
        migrations.AddField(
            model_name='agent',
            name='collector',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agents', to='openbach_django.Collector'),
        ),
        migrations.AlterUniqueTogether(
            name='statisticinstance',
            unique_together=set([('stat', 'job')]),
        ),
        migrations.AlterUniqueTogether(
            name='statistic',
            unique_together=set([('name', 'job')]),
        ),
        migrations.AddField(
            model_name='startjobinstanceargument',
            name='start_job_instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='arguments', to='openbach_django.StartJobInstance'),
        ),
        migrations.AlterUniqueTogether(
            name='scenarioconstant',
            unique_together=set([('name', 'scenario')]),
        ),
        migrations.AlterUniqueTogether(
            name='scenarioargument',
            unique_together=set([('name', 'scenario')]),
        ),
        migrations.AlterUniqueTogether(
            name='scenario',
            unique_together=set([('name', 'project')]),
        ),
        migrations.AddField(
            model_name='requiredjobargumentvalue',
            name='job_instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='required_arguments_values', to='openbach_django.JobInstance'),
        ),
        migrations.AlterUniqueTogether(
            name='requiredjobargument',
            unique_together=set([('name', 'job'), ('rank', 'job')]),
        ),
        migrations.AlterUniqueTogether(
            name='oscommand',
            unique_together=set([('name', 'job')]),
        ),
        migrations.AddField(
            model_name='optionaljobargumentvalue',
            name='job_instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='optional_arguments_values', to='openbach_django.JobInstance'),
        ),
        migrations.AlterUniqueTogether(
            name='optionaljobargument',
            unique_together=set([('name', 'job'), ('flag', 'job')]),
        ),
        migrations.AlterUniqueTogether(
            name='openbachfunction',
            unique_together=set([('scenario', 'function_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='network',
            unique_together=set([('name', 'project')]),
        ),
        migrations.AlterUniqueTogether(
            name='installedjobcommandresult',
            unique_together=set([('agent_ip', 'job_name')]),
        ),
        migrations.AlterUniqueTogether(
            name='installedjob',
            unique_together=set([('agent', 'job')]),
        ),
        migrations.AlterUniqueTogether(
            name='filecommandresult',
            unique_together=set([('filename', 'address', 'remote_path')]),
        ),
        migrations.AlterUniqueTogether(
            name='entity',
            unique_together=set([('name', 'project')]),
        ),
        migrations.AddField(
            model_name='conditionunequal',
            name='left_operand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Operand'),
        ),
        migrations.AddField(
            model_name='conditionunequal',
            name='right_operand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Operand'),
        ),
        migrations.AddField(
            model_name='conditionor',
            name='left_condition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Condition'),
        ),
        migrations.AddField(
            model_name='conditionor',
            name='right_condition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Condition'),
        ),
        migrations.AddField(
            model_name='conditionnot',
            name='condition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Condition'),
        ),
        migrations.AddField(
            model_name='conditionlowerorequal',
            name='left_operand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Operand'),
        ),
        migrations.AddField(
            model_name='conditionlowerorequal',
            name='right_operand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Operand'),
        ),
        migrations.AddField(
            model_name='conditionlower',
            name='left_operand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Operand'),
        ),
        migrations.AddField(
            model_name='conditionlower',
            name='right_operand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Operand'),
        ),
        migrations.AddField(
            model_name='conditiongreaterorequal',
            name='left_operand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Operand'),
        ),
        migrations.AddField(
            model_name='conditiongreaterorequal',
            name='right_operand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Operand'),
        ),
        migrations.AddField(
            model_name='conditiongreater',
            name='left_operand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Operand'),
        ),
        migrations.AddField(
            model_name='conditiongreater',
            name='right_operand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Operand'),
        ),
        migrations.AddField(
            model_name='conditionequal',
            name='left_operand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Operand'),
        ),
        migrations.AddField(
            model_name='conditionequal',
            name='right_operand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Operand'),
        ),
        migrations.AddField(
            model_name='conditionand',
            name='left_condition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Condition'),
        ),
        migrations.AddField(
            model_name='conditionand',
            name='right_condition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='openbach_django.Condition'),
        ),
        migrations.AlterUniqueTogether(
            name='scenarioargumentvalue',
            unique_together=set([('argument', 'scenario_instance')]),
        ),
    ]

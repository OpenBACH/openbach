---

- name: Add Agents hostname in the known_hosts File
  shell: ssh openbach@{{ item }} -o StrictHostKeyChecking=no -q exit
  with_items: "{{ groups.agent | default([]) }}"
  remote_user: openbach
  tags:
    - consider_safe_network

- name: Deactivate Ansible Host Key Checking on the Controller
  copy: src=ansible.cfg dest=/home/openbach/.ansible.cfg
  remote_user: openbach
  tags:
    - consider_safe_network

- name: Create the Variables Folder
  file: path=/opt/openbach/controller/ansible/{{ item }} state=directory
  with_items:
    - group_vars
    - host_vars
  remote_user: openbach

- name: Add the Controller IP as the openbach_controller Ansible Variable
  template: src=group_vars_all.j2 dest=/opt/openbach/controller/ansible/group_vars/all
  remote_user: openbach

- name: Copy the Required Playbooks
  copy: src={{ item }} dest=/opt/openbach/controller/ansible
  with_items:
    - install.yml
    - uninstall.yml
    - assign_collector.yml
    - check_connection.yml
    - enable_logs.yml
    - install_a_job.yml
    - push_files.yml
    - uninstall_a_job.yml
  remote_user: openbach

- name: Configure HTTP Proxies for Agents
  template: src=host_vars.j2 dest=/opt/openbach/controller/ansible/host_vars/{{ item }}
  with_items: "{{ groups.agent | default([]) }}"
  remote_user: openbach

- name: List Jobs found in Core Folder
  local_action: jobs_metadata folders={{ ['../src/jobs/'] }} substitute=/opt/openbach/controller/src/jobs/
  register: openbach_jobs_metadata_core

- name: List Jobs found in User-provided Folders
  local_action: jobs_metadata folders={{ openbach_jobs_folders | default([]) }} substitute=/opt/openbach/controller/src/jobs/private_jobs/
  register: openbach_jobs_metadata_extra

- name: Authentify into the Backend Database
  uri:
    url: http://localhost:8000/login/
    method: POST
    body_format: json
    body:
      login: "{{ openbach_backend_admin_name }}"
      password: "{{ openbach_backend_admin_password }}"
  register: openbach_backend_login

- name: Add Jobs into the Backend Database
  uri:
    url: http://localhost:8000/job/
    method: POST
    body_format: json
    body:
      name: "{{ item.name }}"
      path: "{{ item.path }}"
    headers:
      Cookie: "sessionid={{ openbach_backend_login.cookies.sessionid }}"
  with_items:
    - "{{ openbach_jobs_metadata_core.openbach_jobs }}"
    - "{{ openbach_jobs_metadata_extra.openbach_jobs }}"
    
- name: Add Collectors into the Backend Database
  uri:
    url: http://localhost:8000/collector/
    method: POST
    body_format: json
    body:
      address: "{{ item }}"
      name: "{{ hostvars[item].openbach_name }}"
      skip_playbook: true
    headers:
      Cookie: "sessionid={{ openbach_backend_login.cookies.sessionid }}"
    status_code: 202
  with_items: "{{ groups.collector | default([]) }}"

- name: Wait until Playbook Finishes
  uri: url=http://localhost:8000/collector/{{ item }}/state
  register: response
  with_items: "{{ groups.collector | default([]) }}"
  delay: "{{ openbach_backend_retry_delay | default(5) }}"
  retries: 20
  until: response.json.add.returncode in (200, 204)

- name: Add Agents into the Backend Database
  uri:
    url: http://localhost:8000/agent/
    method: POST
    body_format: json
    body:
      address: "{{ item }}"
      name: "{{ hostvars[item].openbach_name }}"
      collector_ip: "{{ hostvars[item].openbach_collector }}"
      skip_playbook: true
    headers:
      Cookie: "sessionid={{ openbach_backend_login.cookies.sessionid }}"
    status_code: 202
  with_items: "{{ groups.agent | default([]) }}"

- name: Wait until Playbook Finishes
  uri: url=http://localhost:8000/agent/{{ item }}/state
  register: response
  with_items: "{{ groups.agent | default([]) }}"
  delay: "{{ openbach_backend_retry_delay | default(5) }}"
  retries: 20
  until: response.json.install.returncode in (200, 204)

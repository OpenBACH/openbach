# 
#   OpenBACH is a generic testbed able to control/configure multiple
#   network/physical entities (under test) and collect data from them. It is
#   composed of an Auditorium (HMIs), a Controller, a Collector and multiple
#   Agents (one for each network entity that wants to be tested).
#   
#   
#   Copyright Â© 2016 CNES
#   
#   
#   This file is part of the OpenBACH testbed.
#   
#   
#   OpenBACH is a free software : you can redistribute it and/or modify it under the
#   terms of the GNU General Public License as published by the Free Software
#   Foundation, either version 3 of the License, or (at your option) any later
#   version.
#   
#   This program is distributed in the hope that it will be useful, but WITHOUT
#   ANY WARRANTY, without even the implied warranty of MERCHANTABILITY or FITNESS
#   FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
#   details.
#   
#   You should have received a copy of the GNU General Public License along with
#   this program. If not, see http://www.gnu.org/licenses/.
#   
#   
#   
#   @file     install_daemon.yml
#   @brief    Tasks that install the Control-Agent
#   @author   Adrien THIBAUD <adrien.thibaud@toulouse.viveris.com>


---

- name: Install python3-pip
  apt: pkg=python3-pip state=installed
  
- name: Download APScheduler
  copy: src=../src_agent/apscheduler/ dest=/tmp/apscheduler

- name: Install APScheduler
  pip: name=apscheduler executable=pip3 version={{ apscheduler_version }} extra_args='--download-cache /tmp/apscheduler/'
  when: ansible_distribution_version != "16.04"

- name: Install APScheduler
  pip: name=apscheduler executable=pip3 version={{ apscheduler_version }} extra_args='--no-index --find-links=file:///tmp/apscheduler/'
  when: ansible_distribution_version == "16.04"

- name: Upgrade setuptools
  pip: name=setuptools extra_args='--upgrade' executable=pip3

- name: Install python3-yaml
  apt: pkg=python3-yaml state=installed update_cache=false
  
- name: Create openbach-agent repository
  file: path=/opt/openbach-agent state=directory mode=0755
  
- name: Create openbach pid repository
  file: path=/var/run/openbach state=directory mode=0755
  
- name: Create openbach-agent jobs repository
  file: path=/opt/openbach-agent/jobs state=directory mode=0755
  
- name: Create openbach-agent job_instances repository
  file: path=/opt/openbach-agent/job_instances state=directory mode=0755
  
- name: Install the daemon
  copy: src=../src_agent/openbach-agent/{{ item.name }} dest=/opt/openbach-agent/ mode={{ item.mode }}
  with_items:
    - { name: 'openbach-agent.py', mode: '0755' }
    - { name: 'openbach-agent_filter.conf', mode: '0644' }
  
- name: Install the openbach-baton script as an executable
  copy: src=../src_agent/openbach-agent/openbach-baton dest=/opt/openbach-agent/ mode=0755
  
- name: Create the service
  template: src=../src_agent/openbach-agent/openbach-agent.j2 dest=/etc/init.d/openbach-agent mode=0755
  when: ansible_distribution_version != "16.04"

- name: Create the service
  copy: src=../src_agent/openbach-agent/openbach-agent.service dest=/etc/systemd/system/ mode=0644
  when: ansible_distribution_version == "16.04"

- name: Install the daemon (part 2)
  template: src=../src_agent/openbach-agent/openbach-agent.status.j2 dest=/opt/openbach-agent/openbach-agent.status mode=0755
  when: ansible_distribution_version == "16.04"

- name: Start openbach-agent
  service: name=openbach-agent state=started


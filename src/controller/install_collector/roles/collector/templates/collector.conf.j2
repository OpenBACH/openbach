input {
	tcp {
		port => {{ logstash_stats_port }}
		type => "stats"
		tags => ["tcp"]
	}

	udp {
		port => {{ logstash_stats_port }}
		type => "stats"
	}

	syslog {
		port => {{ logstash_logs_port }}
		type => "logs"
	}
}

filter {
	# If the tags "tcp" is present, we delete the incomming port
	if "tcp" in [tags] {
		mutate {
			remove_field => ["port"]
		}
	}

	# If the type is 'stats', we parse the message and delete useless field
	if [type] == "stats" {
		json {
			source => "message"
		}
		# If flag is 0 or the json parser has failed, drop the message
		if [flag] == 0 or "_jsonparsefailure" in [tags] {
			drop {}
		}
		mutate {
			remove_field => ["message", "@version", "host", "tags"]
		}
	}

	# If the type is 'logs', we add the flag (broadcast is severity is ERROR or more)
	if [type] == "logs" {
		mutate {
			replace => [ "host", "%{sysloghost}" ]
			remove_field => "sysloghost"
		}
		if [severity] <= 3 {
			mutate {
				add_field => { "flag" => 3 }
			}
		} else {
			mutate {
				add_field => { "flag" => 1 }
			}
		}
		mutate {
			convert => ["flag", "integer"]
		}
	}
}

output {
	# Flag = 0 => No Storage, No Broadcast
	# Flag = 1 => Storage, No Broadcast
	# Flag = 2 => No Storage, Broadcast
	# Flag = 3 => Storage, Broadcast

	# If the flag is 1 or 3, we have to store the data in the collector database
	if [flag] == 1 or [flag] == 3 {
		# If the type is 'logs', send the data to elasticsearch
		if [type] == "logs" {
			elasticsearch {
				hosts => "{{ ansible_default_ipv4.address }}"
				user => "{{ elasticsearch_cluster_name }}"
			}
		}
		# If type is 'stats', send the data to influxdb
		if [type] == "stats" {
			influxdb {
				measurement => "%{measurement_name}"
				allow_time_override => true
				exclude_fields => ["@timestamp", "type", "measurement_name", "flag"]
				use_event_fields_for_data_points => true
				host => "{{ ansible_default_ipv4.address }}"
				port => {{ influxdb_port }}
				db => "{{ database_name }}"
				user => "{{ database_username }}"
				password => "{{ database_password }}"
				time_precision => "ms"
			}
		}
	}

	# Broadcast the message to the Auditorium
	if [flag] == 2 or [flag] == 3 {
		{{ broadcast_mode }} {
			host => "{{ auditorium_ip }}"
			port => {{ auditorium_broadcast_port }}
		}
	}
}


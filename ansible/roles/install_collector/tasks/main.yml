---

- name: Install apt Dependencies
  apt: name={{ item }} state=present
  with_items:
    - python-influxdb
    - openjdk-8-jdk
  environment: "{{ openbach_proxy_env }}"
  become: yes

- name: Upload Binary Files
  copy: src={{ item }} dest=/tmp/
  with_items:
    - elasticsearch.deb
    - influxdb.deb
    - logstash.deb
    - logstash-offline-plugins.zip

- name: Install .deb Packages
  apt: deb=/tmp/{{ item }}.deb force=yes
  with_items:
    - elasticsearch
    - influxdb
    - logstash
  become: yes
  notify:
    - restart elasticsearch
    - restart influxdb
    - restart logstash

- name: Configure Elasticsearch
  template: src=elasticsearch.yml.j2 dest=/etc/elasticsearch/elasticsearch.yml owner=root group=elasticsearch
  become: yes
  notify: restart elasticsearch

- name: Configure Kibana dashboard
  uri:
    url: http://{{ openbach_collector }}:{{ elasticsearch_port }}/.kibana/{{ item.url }}
    method: PUT
    body: "{{ lookup('file', item.filename) }}"
    status_code: 200, 201
    body_format: json
  with_items:
    - { filename: 'vertical_bar.json', url: 'visualization/vertical_bar' }
    - { filename: 'pie.json', url: 'visualization/pie' } 
    - { filename: 'index_pattern.json', url: 'index-pattern/default_logstash_index' }
    - { filename: 'log_search.json', url: 'search/log_search' }
    - { filename: 'dashboard.json', url: 'dashboard/default_dashboard' }

- name: Configure Logstash
  template: src=collector.conf.j2 dest=/etc/logstash/conf.d/collector.conf owner=root group=root
  vars:
    auditorium_ip: "{{ openbach_auditorium | default(('auditorium' in group_names and inventory_hostname) or ('auditorium' in groups and groups.auditorium and groups.auditorium[0]) or inventory_hostname) }}"
  become: yes
  notify: restart logstash

- name: Add patterns to the ouptput module 'grok'
  copy: src=pattern dest=/etc/logstash/conf.d/
  become: yes
  notify: restart logstash

- name: Install logstash-output-influxdb
  shell: bin/logstash-plugin install file:///tmp/logstash-offline-plugins.zip
  args:
    chdir: /usr/share/logstash
    executable: /bin/bash
    creates: /usr/share/logstash/vendor/bundle/jruby/1.9/gems/logstash-output-influxdb-5.0.0
  become: yes
  become_user: logstash
  notify: restart logstash

- name: Set the Port to use by InfluxDB
  replace: dest=/etc/influxdb/influxdb.conf regexp='(\s+)bind-address = ":8086"(\s+.*)?$' replace='\1bind-address = ":{{ influxdb_port }}"\2' backup=yes
  become: yes
  notify: restart influxdb

- name: Create OpenBACH repository
  file: path=/opt/openbach/collector state=directory
  remote_user: openbach

- name: Copy the version file on the Collector
  copy: src=../version dest=/opt/openbach/collector/version
  remote_user: openbach
